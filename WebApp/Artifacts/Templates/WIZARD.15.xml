<?xml version="1.0"?>
<TemplatePortable xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
  <Id>WIZARD</Id>
  <Name>Wizard</Name>
  <Level>Tecnologia</Level>
  <Content><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                xmlns:msxsl="urn:schemas-microsoft-com:xslt"
                xmlns:wes="http://www.benner.com.br"
                xmlns:asp="http://www.asp.net"
                exclude-result-prefixes="msxsl wes asp">
  <xsl:output method="html" indent="yes" />

  <xsl:template match="Page">
    <xsl:variable name="Registers" select="Registers/Register"/>
    <xsl:variable name="Connections" select="Connections/Connection"/>
    <xsl:variable name="Widgets" select="Widgets/Widget"/>
    <xsl:variable name="Resources" select="Resources/Resource"/>

    <xsl:text disable-output-escaping="yes">&lt;%@ Page Title="</xsl:text>
    <xsl:value-of select="Title"/>
    <xsl:text disable-output-escaping="yes">" Language="C#"</xsl:text>
    <xsl:if test="CodeFile != ''">
      <xsl:text disable-output-escaping="yes"> CodeFile="</xsl:text>
      <xsl:value-of select="CodeFile"/>
      <xsl:text disable-output-escaping="yes">"</xsl:text>
    </xsl:if>
    <xsl:choose>
      <xsl:when test="CodeInherits != ''">
        <xsl:text disable-output-escaping="yes"> Inherits="</xsl:text>
        <xsl:value-of select="CodeInherits"/>
      </xsl:when>
      <xsl:otherwise>
        <xsl:text disable-output-escaping="yes"> Inherits="Benner.Tecnologia.Wes.Components.WebApp.WesPage</xsl:text>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:text disable-output-escaping="yes">" %&gt;
   </xsl:text>

    <xsl:text disable-output-escaping="yes">
&lt;%@ Register Assembly="Benner.Tecnologia.Wes.Components.WebApp" Namespace="Benner.Tecnologia.Wes.Components.WebApp" TagPrefix="wes" %&gt;</xsl:text>
    <xsl:for-each select="$Registers">
      <xsl:text disable-output-escaping="yes">
&lt;%@ Register Assembly="</xsl:text>
      <xsl:value-of select="Assembly"/>
      <xsl:text>" Namespace="</xsl:text>
      <xsl:value-of select="Namespace"/>
      <xsl:text>" TagPrefix="</xsl:text>
      <xsl:value-of select="TagPrefix"/>
      <xsl:text disable-output-escaping="yes">" %&gt;
     </xsl:text>
    </xsl:for-each>

    <xsl:text disable-output-escaping="yes">
      &lt;asp:Content ID="Content1" ContentPlaceHolderID="Main" Runat="Server"&gt;
    </xsl:text>

    <asp:UpdatePanel ID="UPStep" runat="server" UpdateMode="Always">
      <ContentTemplate>
        <asp:HiddenField runat="server" ID="CurrentStep" Value="1" ClientIDMode="Static" />
      </ContentTemplate>
    </asp:UpdatePanel>

    <!-- INICIO TEMPLATE -->
    <div class="portlet light" id="form_wizard">
      <div class="portlet-body form">
        <div class="form-wizard">
          <div class="form-body">
            <ul class="nav nav-pills nav-justified steps">
              <xsl:for-each select="$Widgets">
                <li>
                  <a data-toggle="tab" class="step">
                    <xsl:attribute name="href">#tab<xsl:value-of select="position()"/></xsl:attribute>
                    <span class="number">
                      <xsl:value-of select="position()"/>
                    </span>
                    <span class="desc">
                      <i class="fa fa-check"></i>
                      <xsl:value-of select="Title" />
                    </span>
                  </a>
                </li>
              </xsl:for-each>
            </ul>
            <div id="bar" class="progress progress-striped" role="progressbar">
              <div class="progress-bar progress-bar-success"></div>
            </div>

            <!-- INICIO DO CONTENT -->
            <div class="tab-content">
              <xsl:for-each select="$Widgets">
                <div class="tab-pane active" id="tab1">
                  <xsl:if test="position() = 1">
                    <xsl:attribute name="class">tab-pane active</xsl:attribute>
                  </xsl:if>
                  <xsl:if test="position() > 1">
                    <xsl:attribute name="class">tab-pane</xsl:attribute>
                  </xsl:if>
                  <xsl:attribute name="id">tab<xsl:value-of select="position()"/></xsl:attribute>
                  <div class="row">
                    <xsl:call-template name="render_widget">
                      <xsl:with-param name="widget" select="current()" />
                      <xsl:with-param name="show_title" select="0" />
                      <xsl:with-param name="render_children" select="0" />
                      <xsl:with-param name="chrome_state" select="'Fixed'" />
                    </xsl:call-template>
                  </div>
                </div>
              </xsl:for-each>
            </div>
            <!-- FIM DO CONTENT -->
          </div>
        </div>
      </div>
    </div>
    <!-- FIM TEMPLATE -->

    <!-- INICIO SCRIPT -->
    <xsl:text disable-output-escaping="yes">
    </xsl:text>

    <xsl:for-each select="$Resources">
      <xsl:text disable-output-escaping="yes">
    </xsl:text>
      <xsl:choose>
        <xsl:when test="Type = 'JavaScript'">
          <script type="text/javascript">
            <xsl:text disable-output-escaping="yes">
            </xsl:text>
            <xsl:value-of disable-output-escaping="yes" select="Content"/>
            <xsl:text disable-output-escaping="yes">
            </xsl:text>
          </script>
        </xsl:when>
        <xsl:otherwise>
          <style>
            <xsl:text disable-output-escaping="yes">
            </xsl:text>
            <xsl:value-of disable-output-escaping="yes" select="Content" />
            <xsl:text disable-output-escaping="yes">
            </xsl:text>
          </style>
        </xsl:otherwise>
      </xsl:choose>
    </xsl:for-each>

    <!-- FIM RESOURCES -->

    <!-- INICIO JS TEMPLARE -->
    <script type="text/javascript">
      $(function () {
      // default form wizard
      $('#form_wizard').bootstrapWizard({
      onTabClick: function (tab, navigation, index, clickedIndex) {
      return false;
      },
      onNext: function (tab, navigation, index) {
      },
      onPrevious: function (tab, navigation, index) {
      },
      onTabShow: function (tab, navigation, index) {
      var total = navigation.find('li').length;
      var current = index + 1;
      var $percent = (current / total) * 100;
      $('#form_wizard').find('.progress-bar').css({
      width: $percent + '%'
      });
      }
      });

      selectCurrentStep = function () {
      var currentStep = $("#CurrentStep").val();
      $('[href="#tab' + currentStep + '"]').tab('show');
      };

      // Application event handlers for component developers.
      var prm = Sys.WebForms.PageRequestManager.getInstance();
      if (!prm.get_isInAsyncPostBack()) {
      prm.add_endRequest(function (sender, args) {
      selectCurrentStep();
      });
      }

      selectCurrentStep();
      });
    </script>
    <!-- FIM JS TEMPLARE -->

    <xsl:text disable-output-escaping="yes">
      &lt;/asp:Content&gt;
    </xsl:text>
  </xsl:template>

  <xsl:template name="render_widget">
    <xsl:param name="widget"/>
    <xsl:param name="show_title"/>
    <xsl:param name="render_children"/>
    <xsl:param name="chrome_state"/>

    <xsl:text disable-output-escaping="yes">
    </xsl:text>
    <xsl:text disable-output-escaping="yes">&lt;</xsl:text>
    <xsl:value-of select="TagName" />
    <xsl:text> runat="server" ID="</xsl:text>
    <xsl:value-of select="Id" />
    <xsl:text disable-output-escaping="yes">" </xsl:text>
    <xsl:text>Title="</xsl:text>
    <xsl:value-of select="Title" />
    <xsl:text disable-output-escaping="yes">" </xsl:text>
    <xsl:text>Subtitle="</xsl:text>
    <xsl:value-of select="Subtitle" />
    <xsl:text disable-output-escaping="yes">" </xsl:text>
    <xsl:text>PortletCssClass="</xsl:text>
    <xsl:value-of select="PortletCssClass" />
    <xsl:text disable-output-escaping="yes">" </xsl:text>
    <xsl:text>PortletLayout="</xsl:text>
    <xsl:value-of select="PortletLayout" />
    <xsl:text disable-output-escaping="yes">" </xsl:text>
    <xsl:text>BootstrapCols="</xsl:text>
    <xsl:value-of select="BootstrapCols" />
    <xsl:text disable-output-escaping="yes">" </xsl:text>
    <xsl:text>FontIcon="</xsl:text>
    <xsl:value-of select="FontIcon" />
    <xsl:text disable-output-escaping="yes">" </xsl:text>
    <xsl:choose>
      <xsl:when test="$show_title = 1">
        <xsl:text>ShowTitle="</xsl:text>
        <xsl:value-of select="ShowTitle" />
        <xsl:text disable-output-escaping="yes">" </xsl:text>
      </xsl:when>
      <xsl:otherwise>
        <xsl:text>ShowTitle="false" </xsl:text>
      </xsl:otherwise>
    </xsl:choose>
    <xsl:text>ProviderWidgetUniqueId="</xsl:text>
    <xsl:value-of select="ProviderId" />
    <xsl:text disable-output-escaping="yes">" </xsl:text>
    <xsl:text>ChromeState="</xsl:text>
    <xsl:value-of select="$chrome_state" />
    <xsl:text disable-output-escaping="yes">" </xsl:text>
    <xsl:value-of select="Attributes" />
    <xsl:text disable-output-escaping="yes"> /&gt;</xsl:text>

    <xsl:if test="$render_children = 1">
      <xsl:for-each select="$widget/Children/Widget">
        <xsl:call-template name="render_widget">
          <xsl:with-param name="widget" select="current()" />
          <xsl:with-param name="show_title" select="1" />
          <xsl:with-param name="render_children" select="1" />
          <xsl:with-param name="chrome_state" select="'Fixed'" />
        </xsl:call-template>
      </xsl:for-each>
    </xsl:if>
  </xsl:template>
</xsl:stylesheet>
]]></Content>
</TemplatePortable>