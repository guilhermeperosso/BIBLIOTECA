//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Benner.Tecnologia.Business;
using Benner.Tecnologia.Common;
using System;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel;
using System.Linq;
using System.Reflection;
using System.Runtime.Serialization;
using System.Text;


namespace Benner.Biblioteca.Entidades
{
    
    
    /// <summary>
    /// Interface para a tabela CLIENTES
    /// </summary>
    public partial interface IClientes : IEntityBase
    {
        
        /// <summary>
        /// Data de Nascimento (DATANASC.)
        /// Opcional = N, Invisível = False, Formato Data = Dia, Mês, Ano - Formato Hora = Sem hora
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "17.2.0.0")]
        System.Nullable<System.DateTime> DataNascimento
        {
            get;
            set;
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "17.2.0.0")]
        Benner.Biblioteca.Entidades.ILivros LivrosInstance
        {
            get;
            set;
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "17.2.0.0")]
        Handle LivrosHandle
        {
            get;
            set;
        }
        
        /// <summary>
        /// Nome (NOME.)
        /// Opcional = N, Invisível = False, Tamanho = 50
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "17.2.0.0")]
        string Nome
        {
            get;
            set;
        }
        
        /// <summary>
        /// Sexo (SEXO.)
        /// Opcional = N, Invisível = False
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "17.2.0.0")]
        ClientesSexoRadioItens Sexo
        {
            get;
            set;
        }
    }
    
    /// <summary>
    /// Interface para o DAO para a tabela CLIENTES
    /// </summary>
    public partial interface IClientesDao : IBusinessEntityDao<IClientes>
    {
    }
    
    /// <summary>
    /// DAO para a tabela CLIENTES
    /// </summary>
    public partial class ClientesDao : BusinessEntityDao<Clientes, IClientes>, IClientesDao
    {
        
        public static ClientesDao CreateInstance()
        {
            return CreateInstance<ClientesDao>();
        }
    }
    
    /// <summary>
    /// Esta classe contém os itens do campo SEXO.
    /// </summary>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "17.2.0.0")]
    public class ClientesSexoRadioItens : RadioItems<ClientesSexoRadioItens>
    {
        
        /// <summary>
        /// Valor = 1, Item = Masculino.
        /// </summary>
        public static ClientesSexoRadioItens ItemMasculino;
        
        /// <summary>
        /// Valor = 2, Item = Feminino.
        /// </summary>
        public static ClientesSexoRadioItens ItemFeminino;
        
		public static implicit operator ClientesSexoRadioItens(string index)
		{
			return GetByIndex(index);
		}

		public static implicit operator string(ClientesSexoRadioItens item)
		{
			return item.Index;
		}
        
        static ClientesSexoRadioItens()
        {
			ItemMasculino = new ClientesSexoRadioItens {Index = "1", Description = @"Masculino"};
			ItemFeminino = new ClientesSexoRadioItens {Index = "2", Description = @"Feminino"};

			Items.Add(ItemMasculino);
			Items.Add(ItemFeminino);

        }
    }
    
    /// <summary>
    /// Clientes
    /// </summary>
    [EntityDefinitionName("CLIENTES")]
    [DataContract(Namespace = "http://Benner.Tecnologia.Common.DataContracts/2007/09", Name = "EntityBase")]
    public partial class Clientes : BusinessEntity<Clientes>, IClientes
    {
        
        /// <summary>
        /// Possui constantes para retornarem o nome dos campos definidos no Builder para cada propriedade
        /// </summary>
		public static class FieldNames
		{
			public const string DataNascimento = "DATANASC";
			public const string Livros = "LIVROS";
			public const string Nome = "NOME";
			public const string Sexo = "SEXO";
		}

        
        /// <summary>
        /// Data de Nascimento (DATANASC.)
        /// Opcional = N, Invisível = False, Formato Data = Dia, Mês, Ano - Formato Hora = Sem hora
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "17.2.0.0")]
        public System.Nullable<System.DateTime> DataNascimento
        {
            get
            {
                return Fields["DATANASC"] as System.Nullable<System.DateTime>;
            }
            set
            {
                Fields["DATANASC"] = value;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "17.2.0.0")]
        public Benner.Biblioteca.Entidades.ILivros LivrosInstance
        {
            get
            {
                if (Livros.Handle == null)
                {
					return null;
                }
                return Livros.Instance;
            }
            set
            {
                if (value == null)
                {
					Livros = null;
					return;
                }
                Livros.Instance = (Benner.Biblioteca.Entidades.Livros) value;
            }
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "17.2.0.0")]
        public Handle LivrosHandle
        {
            get
            {
                return Livros.Handle;
            }
            set
            {
                Livros.Handle = value;
            }
        }
        
        /// <summary>
        /// Livros (LIVROS.)
        /// Opcional = N, Invisível = False, Pesquisar = LIVROS
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "17.2.0.0")]
        public Benner.Tecnologia.Common.EntityAssociation<Benner.Biblioteca.Entidades.Livros> Livros
        {
            get
            {
                return (Fields["LIVROS"] as EntityAssociation).Wrap<Benner.Biblioteca.Entidades.Livros>(Benner.Biblioteca.Entidades.Livros.Get);
            }
            set
            {
                if (value == null)
                {
                    this.Livros.Handle = null;
                }
                else
                {
                    if (value.Association.IsLoaded)
                    {
                        this.Livros.Instance = value.Instance;
                    }
                    else
                    {
                        this.Livros.Handle = value.Handle;
                    }
                }
            }
        }
        
        /// <summary>
        /// Nome (NOME.)
        /// Opcional = N, Invisível = False, Tamanho = 50
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "17.2.0.0")]
        public string Nome
        {
            get
            {
                return Fields["NOME"] as System.String;
            }
            set
            {
                Fields["NOME"] = value;
            }
        }
        
        /// <summary>
        /// Sexo (SEXO.)
        /// Opcional = N, Invisível = False
        /// </summary>
        [System.CodeDom.Compiler.GeneratedCodeAttribute("BEF Code Generator", "17.2.0.0")]
        public ClientesSexoRadioItens Sexo
        {
            get
            {
                RadioItem radioItem = Fields["SEXO"] as RadioItem;
				if (radioItem != null && !string.IsNullOrEmpty(radioItem.Value))
					return new ClientesSexoRadioItens { Index = radioItem.Value, Description = radioItem.Text };
				return null;
            }
            set
            {
                if (value != null)
					Fields["SEXO"] = new RadioItem(value.Index, value.Description);
				else
					Fields["SEXO"] = null;
            }
        }
    }
}
